package automationFramework;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.concurrent.TimeUnit;

import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;
public class FinalHashMap {
  @Test(dataProvider = "data")
  public void integrationTest(Map<String, String> map) throws InterruptedException {
	  WebDriver driver;
	  driver=new FirefoxDriver();
		driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);
		driver.get("file:///D:/Apurv%20Agrawal/Module%204%20Final/Apurv%20New/Selenium/Selenium%20Installations/Selenium%20Demos%20&%20Lab%20files/Lab%20Files/Lab%20Files/LoginPage.html");
		
		driver.findElement(By.name("userid")).sendKeys(map.get("UserName"));
		driver.findElement(By.name("pswrd")).sendKeys(map.get("Password"));
		driver.findElement(By.xpath("/html/body/form/input[3]")).click();
		Thread.sleep(5000);
		System.out.println(driver.getTitle());
		driver.close();
	   
    System.out.println("-------------Test case started ----------------");
    System.out.println(map.get("UserName"));
    System.out.println(map.get("Password"));
    //System.out.println(map.get("DoB"));
    System.out.println("-------------Test case Ended ----------------");
  }
  @DataProvider(name = "data")
  public Object[][] dataSupplier() throws IOException {
    File file = new File("D://Apurv Agrawal//Module 4 Final//Apurv New//Module4//Apurv selenium Projects//AppuSmit//src//automationFramework//Book1.xlsx");
    FileInputStream fis = new FileInputStream(file);
    XSSFWorkbook wb = new XSSFWorkbook(fis);
    XSSFSheet sheet = wb.getSheetAt(0);
    wb.close();
    int lastRowNum = sheet.getLastRowNum() ;
    int lastCellNum = sheet.getRow(0).getLastCellNum();
    Object[][] obj = new Object[lastRowNum][1];
    for (int i = 0; i < lastRowNum; i++) {
      Map<Object, Object> datamap = new HashMap<>();
      for (int j = 0; j < lastCellNum; j++) {
        datamap.put(sheet.getRow(0).getCell(j).toString(), sheet.getRow(i+1).getCell(j).toString());
      }
      obj[i][0] = datamap;
    }
    return  obj;
  }
}